name: Unit Tests Workflow
on: [pull_request]
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code from the repository on the agent machine
      - uses: actions/checkout@v3
      # Install and setup node 18
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      # Install dependencies
      - run: npm install
      # Run tests for front-end and back-end
      - run: npx nx test uct-locator-front-end
      - run: npx nx test uct-locator-back-end

  db-migrate-dev:
    runs-on: 'ubuntu-latest'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    environment: 'development'
    # needs: diff-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.DEV_IAM_ROLE }}
          aws-region: us-east-1
      - name: Get Secrets by Name and by ARN
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            ${{ secrets.MIGRATE_DEV_DB_SECRET_ARN }}
          parse-json-secrets: true
      - name: DB Migrate
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |-
          PREFIX=${{ secrets.MIGRATE_DEV_DB_SECRET_ENV_PREFIX }}
          USERNAME_ENV="${PREFIX}_USERNAME"
          POSTGRES_ADMIN_USERNAME=${!USERNAME_ENV}

          PASSWORD_ENV="${PREFIX}_PASSWORD"
          POSTGRES_ADMIN_PASSWORD=${!PASSWORD_ENV}

          DATABASE_ENV="${PREFIX}_DATABASE"
          POSTGRES_ADMIN_DB=${!DATABASE_ENV}

          HOST_ENV="${PREFIX}_HOST"
          POSTGRES_ADMIN_HOST=${!HOST_ENV}
          
          PORT_ENV="${PREFIX}_PORT"
          POSTGRES_ADMIN_PORT=${!PORT_ENV}
          
          NODE_ENV=migrate npm run db-status -- --debug