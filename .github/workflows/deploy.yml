name: Deployment
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Build the Docker images
        run: |-
          docker build . --file Dockerfile-frontend --build-arg API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} --tag ${{ secrets.ECR_REPO_URL }}/uct-frontend:${{  github.ref_name }}
          docker build . --file Dockerfile-backend --tag ${{ secrets.ECR_REPO_URL }}/uct-backend:${{  github.ref_name }}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ECR_PUSH_IAM_ROLE }}
          aws-region: us-east-1
      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push Docker to ECR Private
        run: |-
          docker push ${{ secrets.ECR_REPO_URL }}/uct-frontend:${{  github.ref_name }}
          docker push ${{ secrets.ECR_REPO_URL }}/uct-backend:${{  github.ref_name }}

  diff-dev:
    runs-on: 'ubuntu-latest'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    environment: 'development'
    needs: build-and-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.DEV_IAM_ROLE }}
          aws-region: us-east-1
      - name: CDK Diff
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |-
          cd iac
          npm install
          npm run cdk diff

  deploy-dev:
    runs-on: 'ubuntu-latest'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    environment: 'development'
    needs: diff-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.DEV_IAM_ROLE }}
          aws-region: us-east-1
      - name: CDK Deploy
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |-
          cd iac
          npm install
          npm run cdk deploy DevStack
  
  diff-prod:
    runs-on: 'ubuntu-latest'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    environment: 'production'
    needs: [build-and-publish, deploy-dev]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.PROD_IAM_ROLE }}
          aws-region: us-east-1
      - name: CDK Diff
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |-
          cd iac
          npm install
          npm run cdk diff

  deploy-prod:
    runs-on: 'ubuntu-latest'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    environment: 'production'
    needs: diff-prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: ${{github.event.push.ref}}
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.PROD_IAM_ROLE }}
          aws-region: us-east-1
      - name: CDK Deploy
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |-
          cd iac
          npm install
          npm run cdk deploy ProdStack